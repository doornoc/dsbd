# Generated by Django 4.2.2 on 2023-06-18 19:14

import custom_auth.models
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='作成日')),
                ('username', models.CharField(max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('is_staff', models.BooleanField(default=False, verbose_name='管理者ステータス')),
                ('is_active', models.BooleanField(default=False, verbose_name='有効')),
                ('add_group', models.BooleanField(default=False, verbose_name='グループ追加申請')),
            ],
            options={
                'verbose_name': 'ユーザ',
                'verbose_name_plural': 'ユーザ',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='name')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='作成日')),
                ('is_active', models.BooleanField(default=False, verbose_name='有効')),
                ('comment', models.CharField(blank=True, default='', max_length=250, verbose_name='comment')),
                ('zipcode', models.CharField(default='', max_length=10, verbose_name='郵便番号')),
                ('address', models.CharField(default='', max_length=250, verbose_name='住所')),
                ('address_en', models.CharField(default='', max_length=250, verbose_name='住所(English)')),
                ('email', models.EmailField(default='', max_length=250, verbose_name='組織メールアドレス')),
                ('phone', models.CharField(default='', max_length=30, verbose_name='phone')),
                ('country', models.CharField(default='Japan', max_length=100, verbose_name='居住国')),
            ],
            options={
                'verbose_name': 'グループ',
                'verbose_name_plural': 'グループ',
            },
        ),
        migrations.CreateModel(
            name='SignUpKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='作成日')),
                ('key', models.UUIDField(default=uuid.uuid4, verbose_name='認証キー')),
                ('comment', models.CharField(blank=True, default='', max_length=200, verbose_name='コメント')),
                ('expired_at', models.DateTimeField(default=custom_auth.models.sign_up_key_expire_date, verbose_name='有効期限')),
                ('is_used', models.BooleanField(default=False, verbose_name='使用済み')),
            ],
            options={
                'verbose_name': 'サインアップ用のKey',
                'verbose_name_plural': 'サインアップ用のKey',
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='作成日')),
                ('is_admin', models.BooleanField(default=False, verbose_name='管理者')),
                ('ldap_register', models.BooleanField(default=False, verbose_name='LDAP登録')),
                ('enable_ldap', models.BooleanField(default=False, verbose_name='LDAP有効')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='custom_auth.group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ユーザ・グループ',
                'verbose_name_plural': 'ユーザ・グループ',
                'unique_together': {('user', 'group')},
            },
        ),
        migrations.CreateModel(
            name='UserActivateToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='作成日')),
                ('token', models.UUIDField(default=uuid.uuid4, verbose_name='Active token')),
                ('expired_at', models.DateTimeField(default=custom_auth.models.user_activate_expire_date, verbose_name='有効期限')),
                ('is_used', models.BooleanField(default=False, verbose_name='使用済み')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Activate用のToken',
                'verbose_name_plural': 'Activate用のToken',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='Specific Groups for this user.', related_name='user_set', related_query_name='user', through='custom_auth.UserGroup', to='custom_auth.group', verbose_name='groups'),
        ),
    ]
